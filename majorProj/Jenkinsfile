pipeline {
  agent any
  tools {nodejs "Node-Build"}
    
  stages {

     //Checkout Git Stage 
    stage('Git') {
      steps {
        checkout([$class: 'GitSCM', branches: [[name: '*/Jenkins_Demo_Hafsah']], extensions: [], userRemoteConfigs: [[credentialsId: '626479c2-ec3f-46d5-8e32-b5d566e57f8d', url: 'https://github.com/hhafzahh/MP_2022.git']]])
      }
    }

    //Build stage: Build the frontend & backend of the application 
    //assuming docker desktop is running in the background
    stage('Build Project') {
        steps {
           dir("majorProj"){
                bat 'docker-compose build'
                script{
                    withDockerRegistry(credentialsId: 'credentials') {
                        //push image into dockerhub
                        bat 'docker-compose push'
                    }
                }
            }
        }
    }

    //Test Stage
    /*stage('Test'){
        steps{
            dir("majorProj/src/seleniumTesting"){
                
                bat 'npm install selenium-webdriver --save'
                bat 'npm install chromedriver --chromedriver_version=LATEST --save'
                bat 'node newconf.js'
            }
        }
    }*/

    //Run the application
    //Stop application only with an interactive proceed input
    stage('Deliver'){
        failFast true
        parallel{
            stage('Run'){
                steps{
                    dir("majorProj"){
                        bat 'docker-compose up'
                    }
                }
            }
            stage('Stop'){
                steps{
                    input('Proceed to stop server?')
                    dir("majorProj"){
                        bat 'docker-compose down'
                    }
                }
            }
        }
    }
    
    //Clean the data in MongoDB Database
    //Push Docker image into the dockerhub
    stage('Build Python file'){
        steps{
            dir("majorProj/python"){
                bat 'docker-compose build'
                script{
                    withDockerRegistry(credentialsId: 'credentials') {
                        //push image into dockerhub
                        bat 'docker-compose push'
                    }
                }
            }
        }
    }

    //Run the python file & output the .csv file in jenkins workspace
    stage('Run Python file'){
        steps{
            dir("majorProj/python"){
                bat 'docker-compose up'
            }
        }
    }    
  }
}
    
